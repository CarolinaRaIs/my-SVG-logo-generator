const svgCaptcha = require('svg-captcha');
const getUserInput = require('./userInput');
// true argument is passed to the createShape function to indicate that want to use the updated addText function.
const createShape = require('./shapes');
const writeToFile = require('./fileWriter');

// Define function for creating a logo
async function createLogo() {
    try {
      // Get user input
      const answers = await getUserInput();
  
      // Create shape based on user input
      const shape = createShape(answers.shapeType, answers.shapeColor);
      console.log(shape);
      
      // Generating the SVG image by calling the svgCaptcha function with the text property of the answers object and saving it to a file
      // svgCaptcha(text, options)
      // .data is used to access the SVG image data generated by the svgCaptcha() function.
      //necessary because we need to pass the SVG image data to the response object of an HTTP server, which is used to send the image to the client's web browser
      const svg = svgCaptcha(answers.text, {
        size: 4,
        noise: 1,
        color: true,
        background: answers.shapeColor,
        width: 300,
        height: 200,
        fontSize: 80,
        charPreset: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
        ignoreChars: '0o1i',
      });
      console.log(svg);
      // Set the text color
      const textColor = answers.textColor;
  
      // Add text to the SVG image
      const svgWithText = shape.addText(svg, answers.text, textColor);
      //writeToFile('logo.svg', svgWithText)
      // Return the svg image to file
      console.log(svgWithText);
      return svgWithText;
  
    } catch (error) {
      console.error(error);
      throw error;
    }
  }

  const filename = 'logo.svg';
  createLogo()
    .then((svg) => writeToFile(filename, svg))
    .then(() => console.log(`Logo saved to ${filename}`))
    .catch((error) => console.error(error));
  
  module.exports = createLogo;